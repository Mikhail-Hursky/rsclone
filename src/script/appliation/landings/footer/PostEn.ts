const postEn = {
  title: '<h3>OMG – Oh, My Games or a series of games "Tetris"</h3><ul class="article-authors"><li>Gursky Mikhail,</li><li>Fedorovich Pavel,</li><li>Migacheva Marina,</li></ul><p class="article-data">January, 2021</p>',
  nav: '<ul><li><a href="#foreword">Foreword</a></li><li><a href="#description">Description of the project</a></li><li><a href="#teamwork">Organization of teamwork</a></li><li><a href="#architecture">Project architecture. Features of the implementation</a></li><li><a href="#progress">Development progress</a></li><li><a href="#conclusion">Conclusion</a></li></ul>',

  foreword: '<h4>Foreword</h4><p>It so happened that we ended up with the same mentor, crossed paths during the study on various issues and decided to perform this task together. We all were on these courses for the first time and the goal of training for each of us is similar – to find ourselves in front-end development, to improve skills, participate in interesting projects and get a dream job.</p><p>Of the difficulties, the main one can be called – a large amount of information in a short time. On team projects it was more interesting, there was support and insurance from the team, it was possible to jointly discuss and solve many issues, share experience and receive it in return, the strengths of each of the team allowed us to make the project better.</p>',

  descriptionTitle: '<h4>Description of the project</h4>',
  descriptionItemOne: '<h5>What is the point</h5><p>Surely the word "Tetris" evokes in many nostalgic memories of the good old days, which were filled with characteristic music and pixel graphics. Cancel everything, reschedule appointments - today we\'re going to talk about creating a series of Tetris games that you can play in the browser and spend a whole day on.</p><p>The very idea: to create a version of the game for the browser, which would include several "nostalgic" games, the ability to save the results and access to statistics.</p>  <p>In the beginning, sketching the idea did not raise any concerns - it was necessary to describe the logic, draw the interface and connect them.  It didn\'t look too complicated, but when we sat down to discuss the details, the list was quite impressive.</p><p>Result:</p><ul class="list"><li> - the working interface consists of several modules, some of them are available for any user, game modules and access to statistics are available only after authorization;</li><li> - the play area offers a choice of 6 games (Tetris, Race, Snake, Breackout, Space-attack, Flappy-bird, Snow);</li><li> - after authorization, additional information and the ability to play become available to the user;</li><li> - the interface offers a choice of language.</li></ul>',
  descriptionItemTwo: '<h5>Main features and the process of their implementation</h5><p>For the project, the following important points were identified and implemented in accordance with the terms of the assignment:</p><p><strong>UI block</strong></p><ul class="list"><li>1.	Control of the game from the keyboard - control of game elements is implemented through the keyboard. For example, in the game "Tetris" control the movement of the figure through displacement to the left, right, accelerate the fall, turn, in the game "Race" the displacement of the car when moving to the left and right, in the game "Snake" change the direction of movement of the snake - up, down, left , to the right, change the direction of movement to the opposite, etc.</li><li>2. Ability to switch languages - Russian, English, Belarusian. A control element has been added to the interface, which allows the user to change the interface language to English (by default), Russian or Belarusian</li><li>3. Animations are implemented, for the creation of which key frames are used - these are animations for the preloader, for the logo, for small elements in the interface.</li><li>4. The application is made in the same style - prototyping is done, colors are defined, fonts are selected, general styles are drawn for working game elements displayed on the canvas, individual author\'s graphic elements are drawn and ready-made ones are added that correspond to the general concept.</li><li>5.The application works on a phone / tablet / PC - adaptive solutions for common interface elements have been implemented, solutions for a game element have been written, allowing it to function on the listed devices.</li></ul><p><strong>Game work</strong></p><ul class="list"><li>6. The object of the game allows you to select one of the available pages without reloading, the action of the selected game takes place at different levels, for each game its own game environment has been thought out and created, the scores and / or health for some players are recorded. The games are endless logically, in case of defeat, a general scene is worked out, which allows you to either restart the current game, or go to the game menu.</li><li>7. There are statistics that display the progress of the game - the number of points scored and / or health.</li><li>8. The game has worked out "physics" - "falling" elements, physics of collision and rebound.</li><li>9. Logic for a computer adversary is written - the generation of objects, collision with which leads to defeat, the generation and movement of objects that need to be "intercepted", an increase in complexity for a computer opponent with increasing levels of the game.</li></ul><p><strong>Tech stack</strong></p><ul class="list"><li>10. Used Canvas, Phaser - the game was created on canvas, offers several game scenes for selection</li><li>11. Working with Audio API - in game scenes, sounds are provided when a situation occurs - falling, collision, defeat, "shot"; also, before starting the game, the user has the option to turn off the soundtrack of the game.</li><li>12. Used webpack.</li><li>13. A series of games and the assembly of the structure within the project is written in TypeScript.</li></ul><p><strong>Working with code</strong></p><ul class="list"><li>14. Used eslint, eslint-config-airbnb-base.</li><li>15. Clear, readable code. Function and function names reflect what they contain (what they do). The function performs one action. Repetition of logic is minimized.</li></ul><p><strong>Back-end</strong></p><ul class="list"><li>16. Used RESTful API.</li><li>17. Connecting and working with the database - MongoDB.</li><li>18. Authentication - GitHub</li><li>19. The application displays statistics and data that it receives from the backend - data about an authorized user, game results.</li><li>20. Implemented nodejs and express, gives correct responses, gives HTTP errors with normal body, by which you can understand what happened, writes readable logs</li></ul>',
  descriptionItemThree: '<h5>Interface screenshots</h5><p>*******************</p>',

  teamWorkTitle: '<h4>Organization of team work</h4>',
  teamWorkItemOne: '<h5>How team activities were coordinated</h5><p>Team leader Mikhail Gursky was recognized as the leader in terms of points and, in general, he is a positive and responsible person.</p>',
  teamWorkItemTwo: '<h5>Collaboration tools</h5><p><strong>GitHub, Git</strong> - it is a collaborative work on a project based on the capabilities of these resources.</p><p><strong>Figma</strong> - joint work on prototyping / design of the project and its elements.</p><p><strong>Trello</strong> - it is one of the popular online project management systems, which is in particular demand among small companies and start-ups - which suits our situation. It allows you to effectively organize work according to the Japanese methodology of kanban boards - it\'s better to google it =)</p><p><strong>Zoom, Skype</strong> - options for calling together, demonstrating code, discussing ideas and solutions.</p><p><strong>Telegram</strong> - for current work moments that do not require a long discussion or any other technical features, and to maintain the team\'s mood, which is also important</p>',
  teamWorkItemThree: '<h5>What were the difficulties and how they were solved</h5><p>We were not completely strangers who fell into the same team, so the period of acquaintance and adaptation passed unnoticed. We easily found a common language, views on working moments and other important things for joint work coincided, and what did not coincide was discussed and closed without problems. We actively communicated, maintained constant communication during the development process, helped each other with mistakes, shared interesting things, and also for other reasons.</p>',

  architectureTitle: '<h4>Project architecture. Features of the implementation</h4>',

  progressTitle: '<h4>Development progress</h4>',

  conclusionTitle: '<h4>Conclusion</h4>',
};

export default postEn;
